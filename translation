摘要
今天的区块链并没有真正意义上的规模化。随着更多的节点加入系统，系统的效率(计算、通信和存储)下降，或者最多保持不变。
实现区块链高效伸缩的一个主要思想是分片的概念:不同的节点子集处理区块链的不同部分，从而减少每个节点的负载。
然而，现有的分片建议通过在信任上妥协来实现效率伸缩——损坏给定分片中的节点将导致相应部分数据的永久丢失。
我们观察到分片类似于复制编码，而复制编码在编码理论中是低效和脆弱的。本文介绍了一种用于区块链编码存储和计算的新协议。
特别是，我们提出了PolyShard:“多项式编码分片”方案，该方案在存储效率、系统吞吐量和可靠性方面达到信息理论的上限，从而实现真正可伸缩的系统。
我们提供了仿真结果，数字演示了性能改进的现状，以及多碎片系统的可扩展性。最后，我们讨论了潜在的增强，并强调了构建这样一个系统时的实际考虑因素。


IIIBaseline performance
  在本节中，我们首先给出了在信息论中任意区块链的三个性能指标的理论上界。然后我们研究了两种最先进的区块链方案的性能，并比较了与理论上限的差距。
在安全方面，不管是那种验证方案，网络中非诚实节点的数量的最大数目不能超过网络节点总数N的一半。因此安全性β ≤ N / 2 .
在存储方面，为了验证成功，链的大小不能超过N个节点的aggregated(总共；聚合)存储资源，否则链不能完全被存储，因此有γ ≤ N. 
最后，为了验证K个即将到来的区块，验证函数f^t验证总次数必须至少超过K次。因此，系统吞吐量λ ≤ K/( K/N )= N.
因此，在信息论中，安全性，存储效率，以及吞吐量上限都和网络大小N呈线性关系.

全复制：就存储效率而言，由于每一个节点存储全部区块链的所有K个分片，全复制策略使得内存使用率γfull=1.由于每个全节点都会验证所有K个区块，
所以全复制方案的吞吐量为 λfull = K /(NKc(f^t)/(Nc(f^t)))=1.因此全复制方案不会随着网络大小变化而进行伸缩扩展。因为随着N增加，
存储和吞吐量都保持不变。其优点是：只要恶意节点少于N/2，按照多数节点是好的节点的原则就会保证对每个区块进行正确的验证和更新。

未编码分片方案：在分片中，区块链由K个大小相等（大小q=N/K）的被称为分片的不相交子链组成。每组节点负责管理单个碎片，这是一个K’=1,N=q个节点的全复制系统。
由于每一个节点存储和验证单个分片，存储效率以及吞吐量分别为γsharding = K and λsharding = K /（N*c^t/(N*c^t)）= K.这两个指标的大小与节点数量N
呈现线性关系，因此K=Θ(N)是成立的。因此组大小q成为一个常数。所以，仅牺牲q/2个节点就会破坏一个一个碎片和链。所以这个方案的安全关系数
βsharding = q/2 = O(1)。尽管切分rotation（循环）等系统解决方案可以帮助实现线性伸缩的安全保证，但它们只有在对手（非诚实节点）
是非自适应的(或非常缓慢的自适应)时才是安全的。当对手是动态的，它可以在碎片分配完成后立即破坏属于一个特定碎片的所有节点。在此模型下，安全性降低为常数。

  综上所述，无论是完全复制还是上述分片方案都不能同时提高存储效率、安全性、和吞吐量向信息论界限。我们注意到存储或分布式存储的代码不能在这里直接使用，
因此我们需要能够在编码块上直接计算验证函数。这促使我们在下一节中提出PolyShard(多项式编码的分片)，以便同时实现这三个边界。
为了清晰起见，从现在起，我们将把切分方案称为“未编码的分片”





